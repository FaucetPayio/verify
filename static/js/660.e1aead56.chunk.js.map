{"version":3,"file":"static/js/660.e1aead56.chunk.js","mappings":"yKA0IA,UArIc,WACZ,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,MAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEA,GAAkCJ,EAAAA,EAAAA,UAAwB,IAA1D,eAAOK,EAAP,KAAkBC,EAAlB,KAWA,OACE,gBAAKC,UAAW,cAAhB,UACE,UAAC,KAAD,YACE,2BACE,2IAKA,mRAQF,oHAKA,2BACE,gKAIA,4DAEE,gCAAQC,EAAAA,GAAAA,MAAAA,cAFV,kLAOA,+GAIA,4JAGGA,EAAAA,GAAAA,MAAAA,iBAHH,oSAWF,iKAGE,cAAGC,KAAMD,EAAAA,GAAAA,MAAAA,gBAAT,SACGA,EAAAA,GAAAA,MAAAA,sBAIL,SAAC,KAAD,CAAUE,WAAW,6EAErB,iBAAKH,UAAU,cAAf,WACE,gBAAKA,UAAU,YAAf,UACE,SAAC,KAAD,CACEI,MAAM,8BACNC,SAAS,8CACTC,MAAOL,EAAAA,GAAAA,MAAAA,WACPM,UAAQ,OAIZ,iBAAKP,UAAU,YAAf,WACE,SAAC,KAAD,CACEI,MAAM,cACNC,SAAS,gGACTC,MAAOZ,EACPc,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBd,EAAcc,EAAOH,MAArC,KAEZ,SAAC,KAAD,CACEF,MAAM,kBACNC,SAAS,+FACTC,MAAOV,EACPY,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBZ,EAAiBY,EAAOH,MAAxC,QAId,mBACEI,KAAK,SACLV,UAAU,yBACVW,QAhGQ,WAChB,IAAMC,GAASC,EAAAA,EAAAA,IACbZ,EAAAA,GAAAA,MAAAA,WACAP,EACAE,GAEFG,EAAaa,EACd,EAsFO,wBAOA,gBAAKZ,UAAU,eAAf,SACGF,EAAUgB,QACT,mBAAOd,UAAU,8BAAjB,WACE,4BACE,2BACE,eAAIe,MAAM,MAAV,wBACA,eAAIA,MAAM,MAAV,+BAIJ,2BACGjB,EAAUkB,KAAI,gBAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAf,OACb,gBAAmBlB,UAAU,eAA7B,WACE,wBAAKkB,KACL,wBAAKD,EAAa,QAFXC,EADI,SAQjB,cAMf,C","sources":["pages/Crash/index.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Checking, Input, PageTemplate } from \"components\";\nimport { calculateCrashResult, CrashResult } from \"calculates\";\nimport { globalConfig } from \"config\";\n\nconst Crash = () => {\n  const [serverSeed, setServerSeed] = useState(\"\");\n  const [numberOfGames, setNumberOfGames] = useState(\"10\");\n\n  const [tableData, setTableData] = useState<CrashResult[]>([]);\n\n  const calculate = () => {\n    const result = calculateCrashResult(\n      globalConfig.crash.clientSeed,\n      serverSeed,\n      numberOfGames,\n    );\n    setTableData(result);\n  };\n\n  return (\n    <div className={\"mainWrapper\"}>\n      <PageTemplate>\n        <ul>\n          <li>\n            Client Seed (Bitcoin Block): This is a randomly chosen future block\n            number's block hash during seeding event.\n          </li>\n\n          <li>\n            Server Seed: This is the server seed of the chain generated in the\n            start for 10,000,000 rounds. The last seed (i.e., first round)'s\n            seed is always public so that you can check that we did not change\n            the server seed in the middle of the games.\n          </li>\n        </ul>\n\n        <p>\n          This page allows you to determine the fairness of the mechanism used\n          in our Crash game.\n        </p>\n\n        <ul>\n          <li>\n            We start by generating 10 M hashes, starting with a server seed\n            which is continuously hashed with SHA-256 till we have 10M hashes.\n          </li>\n          <li>\n            The last hash of the series is\n            <code> {globalConfig.crash.seriesHash}</code>. This is so that you\n            know that we have not changed the chain of our hashes in our favour.\n            By making it public, we prevent ourselves from changing any hashes\n            in the chain.\n          </li>\n          <li>\n            We will play all the hashes in reverse order. Starting from 10M (th)\n            hash to 1st.\n          </li>\n          <li>\n            In order to make sure that we don't choose a server seed in our\n            favour, we use a client seed which comes from a Bitcoin block (\n            {globalConfig.crash.bitcoinBlockSeed}) from the future. The block\n            number is chosen before it is mined, so we don't have any way to\n            predict its hash. Every 4-5 years (roughly), our hashes will exhaust\n            and we will have another seeding event to generate the new list of\n            hashes and select a new Bitcoin block in the future.\n          </li>\n        </ul>\n\n        <p>\n          The Bitcoin Block is chosen and referenced at a third-party forum such\n          as Bitcoin Talk. The link to our seeding event is as follows:\n          <a href={globalConfig.crash.bitcoinTalkLink}>\n            {globalConfig.crash.bitcoinTalkLink}\n          </a>\n        </p>\n\n        <Checking sourceLink=\"https://github.com/FaucetPayio/verify/blob/main/src/calculates/crash.ts\" />\n\n        <div className=\"pageContent\">\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Client Seed (Bitcoin Block)\"\n              subTitle=\"This Client Seed comes from a Bitcoin Block\"\n              value={globalConfig.crash.clientSeed}\n              disabled\n            />\n          </div>\n\n          <div className=\"inputsRow\">\n            <Input\n              title=\"Server Seed\"\n              subTitle=\"Server Seed is generated by the server. It is only shared with you after you rotate the seed.\"\n              value={serverSeed}\n              onChange={({ target }) => setServerSeed(target.value)}\n            />\n            <Input\n              title=\"Number of Games\"\n              subTitle=\"Number of rounds you want in reference to this (round associated with the server seed) game.\"\n              value={numberOfGames}\n              onChange={({ target }) => setNumberOfGames(target.value)}\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"btn btn-info marginTop\"\n            onClick={calculate}>\n            Calculate\n          </button>\n\n          <div className=\"tableWrapper\">\n            {tableData.length ? (\n              <table className=\"table table-hover marginTop\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Game hash</th>\n                    <th scope=\"col\">Crash point</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {tableData.map(({ crashPoint, gameHash }) => (\n                    <tr key={gameHash} className=\"table-active\">\n                      <td>{gameHash}</td>\n                      <td>{crashPoint + \"x\"}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            ) : null}\n          </div>\n        </div>\n      </PageTemplate>\n    </div>\n  );\n};\n\nexport default Crash;\n"],"names":["useState","serverSeed","setServerSeed","numberOfGames","setNumberOfGames","tableData","setTableData","className","globalConfig","href","sourceLink","title","subTitle","value","disabled","onChange","target","type","onClick","result","calculateCrashResult","length","scope","map","crashPoint","gameHash"],"sourceRoot":""}