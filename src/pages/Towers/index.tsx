import { useState } from "react";
import { Checking, Field, Input, PageTemplate } from "components";
import { calculateTowers } from "calculates";
import { repeat } from "utils";

import win from "./towers/crystal.png";
import loss from "./towers/bomb.png";
import { mainBranch } from "config";

export type TowersDifficulty = "easy" | "medium" | "wicked" | "hard" | "brutal";
/*** true -- fish
 ** false -- vomit*/
export type TowersBuildLine = boolean[];

const difficulty: TowersDifficulty[] = [
  "easy",
  "medium",
  "wicked",
  "hard",
  "brutal",
];

const Towers = () => {
  const [clientSeed, setClientSeed] = useState("");
  const [serverSeed, setServerSeed] = useState("");
  const [nonce, setNonce] = useState("");
  const [diff, setDiff] = useState<TowersDifficulty>("easy");

  const [serverHash, setServerHash] = useState("");
  const [tower, setTower] = useState<TowersBuildLine[]>(
    repeat(9, () => repeat(4, () => true)),
  );

  const calculate = () => {
    const { seed, tower } = calculateTowers(
      clientSeed,
      serverSeed,
      nonce,
      diff,
    );

    setServerHash(seed);
    setTower(tower);
  };

  return (
    <div className={"mainWrapper"}>
      <PageTemplate>
        <ul>
          <li>
            Client Seed: This is a random hexadecimal string generated by your
            computer. The server does know about this client seed prior to the
            bet execution. Ideally, it should be freshly generated for each bet.
            However, some players have their "lucky" client seed which they
            prefer to keep.
          </li>
          <li>
            Server Seed: This is a random hexadecimal string generated by the
            server. It is not shared with the player (until they rotate the
            seed).
          </li>
          <li>
            Server Seed Hash: Since the server seed is not shared with the user,
            the server provides you with a hash of the server seed. This means
            that you can check (after the seed is rotated) whether the server
            was using the correct, shown server seed or not. The server seed
            hash is always unique and corresponds to a server seed being used to
            play games previously.
          </li>
        </ul>

        <Checking sourceLink={`https://github.com/FaucetPayio/verify/blob/${mainBranch}/src/calculates/towers.ts`} />

        <div className="pageContent">
          <div className="inputsRow">
            <Input
              title="Client Seed"
              subTitle="Client Seed comes from your browser and is never generated by the server."
              value={clientSeed}
              onChange={({ target }) => setClientSeed(target.value)}
            />

            <Input
              title="Nonce"
              subTitle="Nonce starts from 1 and is a count for the games you play (associated to the particular server seed)."
              value={nonce}
              onChange={({ target }) => setNonce(target.value)}
            />
          </div>

          <div className="inputsRow">
            <Input
              title="Server Seed"
              subTitle="Server Seed is generated by the server. It is only shared with you after you rotate the seed."
              value={serverSeed}
              onChange={({ target }) => setServerSeed(target.value)}
            />

            <Field
              title="Difficulty"
              subTitle="The difficulty/risk factor selected in the games.">
              <select
                className="form-select"
                value={diff}
                onChange={({ target }) =>
                  setDiff(target.value as TowersDifficulty)
                }>
                {difficulty.map((v) => (
                  <option value={v}>{v}</option>
                ))}
              </select>
            </Field>
          </div>

          <div className="inputsRow">
            <Input
              disabled
              title="Server Seed (SHA-256)"
              subTitle="This is the SHA-256 hash of the Server Seed shown prior to rotation of the seed."
              value={serverHash}
            />

            <Field
              title="Actual Outcome"
              subTitle="This is the result/outcome of the game calculated locally in your game. It should match that shown at the main site.">
              <div className="tower">
                {tower.map((v) => (
                  <div className="line">
                    {v.map((is) => (
                      <img
                        src={is ? win : loss}
                        alt="cell"
                        className="towerCell"
                      />
                    ))}
                  </div>
                ))}
              </div>
            </Field>
          </div>

          <button
            type="button"
            className="btn btn-info marginTop"
            onClick={calculate}>
            Calculate
          </button>
        </div>
      </PageTemplate>
    </div>
  );
};

export default Towers;
